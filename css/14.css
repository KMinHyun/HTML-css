* {
  box-sizing: border-box;
  margin: 0;
  padding: 0;
}

/* .item {
  width: 150px;
  height: 15vh;
  background-color: #7fffd4;
  border: 1px solid black;
} */

.item {
  width: 30vw;
  height: 15vh;
  background-color: #7fffd4;
  border: 1px solid black;
}

.container-row {
  /* flex box는 부모 요소에 'display: flex' 속성을 지정해서 사용함. */
  display: flex;
  /* flex-direction : 주축의 방향을 지정하는 속성 */
  /* flex-direction: row; => 가로가 주축. */
  /* flex-direction: column; => 세로가 주축. */
  /* flex-direction: column-reverse; */
  /* column-reverse로 하면 주축의 방향이 세로로 해서 정렬 순서를 위에서부터가 아니라 밑에서부터로 됨. */
  flex-direction: row;
  /* flex-wrap : 항목의 줄을 바꿀지 여부를 지정. */
  flex-wrap: wrap;
  /* wrap으로 설정하면 화면창을 줄였을 때 박스가 작아지는 게 아니라 아랫줄로 내려감. */
  /* reverse를 설정하면 위로 올라감. */
  /* flex-flow : row wrap; */
  /* flex-flow : flex-direction과 flex-wrap을 한번에 지정할 수 있음. */
  gap: 10px;
}

.container-sort {
  height: 200px;
  background-color: #ab63ee;
  padding: 5px 0px;
  display: flex;
  /* 주축 기준 정렬하기 */
  /* justify-content: flex-start; */
  /* ㄴstart부터 정렬한다는 뜻. */
  /* justify-content: flex-end;
     ㄴ주축의 끝방향부터 정렬한다는 뜻.
     justify-content: center; */
  /* ㄴ가운데 정렬 */
  /* justify-content: space-around; */
  /* ㄴ박스들 간의 여백을 똑같게 줌. */
  /* justify-content: space-between; */
  /* ㄴ박스들 사이의 공간을 똑같게 줌. */
  flex-wrap: wrap;

  /* 교차축 기준 정렬하기 */
  align-content: flex-start;
  /* ㄴ시작점 기준으로 몰아서 정렬. */
  /* ㄴ값은 justify와 똑같이 start, end, center, space-around, space-between 등이 있음. */

  /* 아이템 위치를 개별적으로 조정하는 교차축 기준 정렬 */
  /* align-items: stretch; */
  /* ㄴ아이템에 height 수치가 있으면 작동하지 않음. */
  /* ㄴ직관적이지 않아 잘 사용하지 않음. */
  align-items: baseline;
  /* ㄴ배열이 이상해져서 잘 사용하진 않음. */

}

.container-sort > .item {
  width: 150px;
  height: 100px;
}

.container-sort > .item:nth-child(2) {
  line-height: 70px;
}

.container-sort > .item:nth-child(4) {
  /* 교차축 기준 특정 아이템만 정렬 */
  align-self: flex-end;
  /* 자식 요소 중 하나에만 적용하고 싶을 땐 자식 요소에 속성을 줌. */
  /* 잘 사용하진 않음. */
}